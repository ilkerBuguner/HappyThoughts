@using HappyThoughts.Data.Models
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@using HappyThoughts.Common;

@inject SignInManager<ApplicationUser> SignInManager

@model HappyThoughts.Web.ViewModels.Topics.TopicDetailsViewModel

@{
    this.ViewData["Title"] = "Topic Details";
}
<!-- Page Content -->
<div class="container">
    <div class="row">
        <!-- Post Content Column -->
        <div class="col-lg-8">
            <!-- Title -->
            <h1 class="mt-4">@Model.Title</h1>
            <!-- Author -->
            <p class="lead">
                Author:
                <a asp-controller="Users" asp-action="Profile" asp-route-id="@Model.Author.Id">@Model.Author.UserName</a>
            </p>
            <hr>
            <!-- Date/Time -->
            <p class="text-center"><b>Posted On: @Model.CreatedOn | Category: <a href="/Categories/ByName?name=@Model.Category.Name">@Model.Category.Name</a> | Views: @Model.Views</b></p>
            <hr>
            <!-- Preview Image -->
            @if (!String.IsNullOrEmpty(Model.PictureUrl))
            {
                <div class="text-center">
                    <img class="img-fluid rounded" src="@Model.PictureUrl" width="400" alt="topic picture">
                </div>
                <hr>
            }
            else
            {
                <div class="text-center">
                    <img class="img-fluid rounded" src="https://res.cloudinary.com/doyjshrjs/image/upload/v1584631451/no-image-icon_qmpaf9.png" width="400" alt="topic picture">
                </div>
                <hr>
            }
            <!-- Post Content -->
            @Html.Raw(Model.SanitizedContent)
            <br />
            <hr />
            <div class="text-center">
                <div class="form-group">
                    <form id="topicVotesForm" method="post" hidden></form>
                    <button class="btn btn-outline-primary" id="like"><i class="far fa-thumbs-up"></i> <span id="likesCount">@Model.Likes </span></button>
                    <button class="btn btn-outline-danger" id="dislike"><i class="far fa-thumbs-down"></i> <span id="dislikesCount">@Model.Dislikes </span></button>
                    @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.Author.Id || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <a asp-controller="Topics" asp-action="Edit" asp-route-topicId="@Model.Id" asp-route-categoryName="@Model.Category.Name" asp-route-authorId="@Model.Author.Id" class="btn btn-outline-primary"><i class="far fa-edit"></i> Edit</a>
                        <a class="btn btn-outline-danger" id="delete"><i class="far fa-trash-alt"></i> Delete</a>
                    }
                    <a asp-controller="TopicReports" asp-action="Send" asp-route-topicId="@Model.Id" class="btn btn-outline-secondary"><i class="far fa-flag"></i> Report</a>
                </div>
            </div>
            <hr>
            <!-- Comments Form -->
            @if (this.User.Identity.IsAuthenticated)
            {
                <div class="card my-4">
                    <h5 class="card-header">Leave a Comment:</h5>
                    <div class="card-body">
                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <textarea asp-for="@Model.CommentContent" id="Content" class="form-control" rows="4"></textarea>
                                <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
                            </div>
                            <input type="hidden" id="AuthorId" name="AuthorId" value="@this.User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                            <input type="hidden" id="TopicId" name="TopicId" value="@Model.Id" />
                            <div class="form-group">
                                <input asp-controller="Comments" asp-action="Create" type="submit" value="Comment" class="btn btn-primary" />
                            </div>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <h5>You have to be logged in to post a comment or to vote the topic!</h5>
                    <p>
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Login</a> &nbsp; | &nbsp;
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Register</a>
                    </p>
                </div>
            }

            <div class="d-flex w-100 justify-content-between">
                <h5>Comments: @Model.CommentsCount</h5>
                <h5>Replies: @Model.Comments.Sum(c => c.Replies.Count())</h5>
            </div>
            <br />

            <!--Comments Section-->
            @{ int commentFormIdentifier = 0;}
            @{ int replyFormIdentifier = 0;}
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedOn))
            {
                <div class="media mb-4">
                    @if (comment.Author.ProfilePictureUrl == null)
                    {
                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="https://res.cloudinary.com/doyjshrjs/image/upload/v1584395277/Profile-PNG-Icon-715x715_smb7cf.png" alt="">
                    }
                    else
                    {
                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="@comment.Author.ProfilePictureUrl" alt="">
                    }
                    <div class="media-body">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mt-0"><a asp-controller="Users" asp-action="Profile" asp-route-id="@comment.Author.Id">@comment.Author.UserName</a></h5>
                            <small>@comment.CreatedOn.ToString()</small>
                        </div>
                        <h6>@comment.Content</h6>

                        <div class="d-flex w-100 justify-content-between">
                            <div>
                                @if (this.User.Identity.IsAuthenticated)
                                {
                                    <button class="btn btn-primary btn-sm" onclick="showBlock('replyCommentForm ',@commentFormIdentifier)">Reply</button>
                                }

                                @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == comment.Author.Id
                           || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                {
                                    <button class="btn btn-primary btn-sm" onclick="showBlock('editCommentForm ', @commentFormIdentifier)">Edit</button>
                                    <a class="btn btn-danger btn-sm" asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id" asp-route-authorId="@comment.Author.Id" asp-route-topicId="@Model.Id">Delete</a>
                                }
                                else if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.Author.Id)
                                {
                                    <a class="btn btn-danger btn-sm" asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id" asp-route-authorId="@comment.Author.Id" asp-route-topicId="@Model.Id">Delete</a>
                                }
                            </div>

                            @if (comment.Replies.Count == 1)
                            {
                                <a class="btn bg-info text-white btn-sm" onclick="showBlock('repliesSection ',@commentFormIdentifier)">@comment.Replies.Count Reply</a>
                            }
                            else if (comment.Replies.Count > 1)
                            {
                                <a class="btn bg-info text-white btn-sm" onclick="showBlock('repliesSection ',@commentFormIdentifier)">@comment.Replies.Count Replies</a>
                            }
                        </div>


                        <form asp-action="Edit" id="editCommentForm @commentFormIdentifier" style="display: none;">
                            <br />
                            <div class="form-group">
                                <h6>Edit:</h6>
                                <textarea asp-for="@comment.Content" name="CommentContent" class="form-control" rows="4"></textarea>
                                <span asp-validation-for="@comment.Content" class="text-danger"></span>
                            </div>
                            <input type="hidden" asp-for="@comment.Id" name="Id" value="@comment.Id" />
                            <input type="hidden" asp-for="@comment.TopicId" name="TopicId" value="@Model.Id" />
                            <div class="form-group">
                                <input asp-controller="Comments" asp-action="Edit" type="submit" value="Save Edits" class="btn btn-primary btn-sm" />
                                <a class="btn btn-light btn-sm" onclick="showBlock('editCommentForm ', @commentFormIdentifier)">Hide</a>
                            </div>
                        </form>

                        <form asp-action="Create" id="replyCommentForm @commentFormIdentifier" style="display: none;">
                            <br />
                            <div class="form-group">
                                <h6>Reply to @comment.AuthorName:</h6>
                                <textarea asp-for="@Model.ReplyContent" name="Content" class="form-control" rows="4"></textarea>
                                <span asp-validation-for="@Model.ReplyContent" class="text-danger"></span>
                            </div>
                            <input type="hidden" name="RootCommentId" value="@comment.Id" />
                            <input type="hidden" name="TopicId" value="@Model.Id" />
                            <div class="form-group">
                                <input asp-controller="Replies" asp-action="Create" type="submit" value="Send Reply" class="btn btn-success btn-sm" />
                                <a class="btn btn-light btn-sm" onclick="showBlock('replyCommentForm ',@commentFormIdentifier)">Hide</a>
                            </div>
                        </form>

                        <!-- Replies -->
                        <div id="repliesSection @commentFormIdentifier" style="display: none;">
                            @foreach (var reply in comment.Replies.OrderByDescending(r => r.CreatedOn))
                            {

                                <div class="media mt-4">
                                    @if (comment.Author.ProfilePictureUrl == null)
                                    {
                                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="https://res.cloudinary.com/doyjshrjs/image/upload/v1584395277/Profile-PNG-Icon-715x715_smb7cf.png" alt="">
                                    }
                                    else
                                    {
                                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="@reply.Author.ProfilePictureUrl" alt="">
                                    }
                                    <div class="media-body">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mt-0"><a asp-controller="Users" asp-action="Profile" asp-route-id="@reply.Author.Id">@reply.Author.UserName</a></h5>
                                            <small>@reply.CreatedOn.ToString()</small>
                                        </div>
                                        <h6>@reply.Content</h6>

                                        @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == reply.Author.Id
                                    || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                        {
                                            <button class="btn btn-primary btn-sm" onclick="showBlock('editReplyForm ', @replyFormIdentifier)">Edit</button>
                                            <a class="btn btn-danger btn-sm" asp-controller="Replies" asp-action="Delete" asp-route-id="@reply.Id" asp-route-authorId="@reply.Author.Id" asp-route-topicId="@Model.Id">Delete</a>
                                        }
                                    </div>
                                </div>
                                <form asp-action="Edit" id="editReplyForm @replyFormIdentifier" style="display: none;">
                                    <br />
                                    <div class="form-group">
                                        <h6>Edit Reply:</h6>
                                        <textarea asp-for="@reply.Content" name="Content" class="form-control" rows="4"></textarea>
                                        <span asp-validation-for="@reply.Content" class="text-danger"></span>
                                    </div>
                                    <input type="hidden" asp-for="@reply.Id" name="Id" value="@reply.Id" />
                                    <input type="hidden" asp-for="@reply.TopicId" name="TopicId" value="@Model.Id" />
                                    <div class="form-group">
                                        <input asp-controller="Replies" asp-action="Edit" type="submit" value="Save Edits" class="btn btn-primary btn-sm" />
                                        <a class="btn btn-light btn-sm" onclick="showBlock('editReplyForm ', @replyFormIdentifier)">Hide</a>
                                    </div>
                                </form>
                                { replyFormIdentifier++; }
                            }
                        </div>
                    </div>
                </div>
                { commentFormIdentifier++; }
            }
            <br />
        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

            <!--Profile Info Widget-->
            @await Html.PartialAsync("_ProfileInfoSideWidget", Model.Author)

            <!-- Side Widget -->
            @await Html.PartialAsync("_PromptingWidgetPartial")

            <!-- Categories Widget -->
            @await Html.PartialAsync("_PopularCategoriesPartial", Model.TopCategories)


        </div>

    </div>
    <!-- /.row -->

</div>


<!-- Topic Delete Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this Topic?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <a class="btn btn-danger" asp-controller="Topics" asp-action="Delete" asp-route-id="@Model.Id" asp-route-authorId="@Model.Author.Id">Delete</a>
            </div>
        </div>
    </div>
</div>

<!-- /.container -->
<!-- Bootstrap core JavaScript -->
<script src="vendor/jquery/jquery.min.js"></script>
<script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        function showBlock(formName, formNum) {
            var element = document.getElementById(formName + formNum);
            if (element.style.display === 'none') {
                element.style.display = 'block';
            }
            else {
                element.style.display = 'none';
            }
        }
    </script>
}


<!-- Scripts for Topic deletion modal -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="bootstrap/js/bootstrap.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#delete").click(function () {
            $("#confirmDeleteModal").modal('show');
        });
    });

    $("#btnHideModal").click(function () {
        $("#confirmDeleteModal").modal('hide');
    });
</script>

<script>
    $(document).ready(function () {
        $("#like").click(function () {
            var token = $("#topicVotesForm input[name=__RequestVerificationToken]").val();
            $.ajax('/Votes/TopicVote', {
                type: 'POST',  // http method
                data: { topicId: '@Model.Id', IsLike: 'true' },  // data to submit
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#likesCount").html(data.likesCount);
                }
            });
        });
    });

    $(document).ready(function () {
        $("#dislike").click(function () {
            var token = $("#topicVotesForm input[name=__RequestVerificationToken]").val();
            $.ajax('/Votes/TopicVote', {
                type: 'POST',  // http method
                data: { topicId: '@Model.Id', IsLike: 'false' },  // data to submit
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                     $("#dislikesCount").html(data.dislikesCount);
                }
            });
        });
    });
</script>
