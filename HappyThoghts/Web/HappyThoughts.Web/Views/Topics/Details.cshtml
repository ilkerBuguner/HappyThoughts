@using HappyThoughts.Data.Models
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@using HappyThoughts.Common;

@inject SignInManager<ApplicationUser> SignInManager

@model HappyThoughts.Web.ViewModels.Topics.TopicDetailsViewModel

@{
    this.ViewData["Title"] = "Topic Details";
}
<!-- Page Content -->
<div class="container">
    <div class="row">
        <!-- Post Content Column -->
        <div class="col-lg-8">
            <!-- Title -->
            <h1 class="mt-4">@Model.Title</h1>
            <!-- Author -->
            <p class="lead">
                Author:
                <a asp-controller="Users" asp-action="Profile" asp-route-id="@Model.Author.Id">@Model.Author.UserName</a>
            </p>
            <hr>
            <!-- Date/Time -->
            <p class="text-center"><b>Posted On: @Model.CreatedOn | Category: <a href="/Categories/ByName?name=@Model.CategoryName">@Model.CategoryName</a> | Views: @Model.Views</b></p>
            <hr>
            <!-- Preview Image -->
            @if (!String.IsNullOrEmpty(Model.PictureUrl))
            {
                <div class="text-center">
                    <img class="img-fluid rounded" src="@Model.PictureUrl" width="400" alt="topic picture">
                </div>
                <hr>
            }
            else
            {
                <div class="text-center">
                    <img class="img-fluid rounded" src="https://res.cloudinary.com/doyjshrjs/image/upload/v1584631451/no-image-icon_qmpaf9.png" width="400" alt="topic picture">
                </div>
                <hr>
            }
            <p class="text-center"><b>Likes: @Model.Likes | Dislikes: @Model.Dislikes | Comments: @Model.CommentsCount</b></p>
            <hr />
            <!-- Post Content -->
            @Html.Raw(Model.SanitizedContent)
            <br />
            <hr />
            <div class="text-center">
                <div class="form-group">
                    <button class="btn btn-outline-primary" id="like"><i class="far fa-thumbs-up"></i> Like</button>
                    <button hidden class="btn btn-outline-primary" id="likeClicked"><i class="fas fa-thumbs-up"></i> Liked</button>
                    <button class="btn btn-outline-primary" id="dislike"><i class="far fa-thumbs-down"></i> Dislike</button>
                    <button hidden class="btn btn-outline-primary" id="dislikeClicked"><i class="fas fa-thumbs-down"></i> Disliked</button>
                    @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.Author.Id || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <a asp-controller="Topics" asp-action="Edit" asp-route-topicId="@Model.Id" asp-route-categoryName="@Model.CategoryName" asp-route-authorId="@Model.Author.Id" class="btn btn-outline-primary"><i class="far fa-edit"></i> Edit</a>
                        <a class="btn btn-outline-danger" id="delete"><i class="far fa-trash-alt"></i> Delete</a>
                    }
                    <a asp-controller="TopicReports" asp-action="Send" asp-route-topicId="@Model.Id" class="btn btn-outline-secondary"><i class="far fa-flag"></i> Report</a>
                </div>
            </div>
            <hr>
            <!-- Comments Form -->
            @if (this.User.Identity.IsAuthenticated)
            {
                <div class="card my-4">
                    <h5 class="card-header">Leave a Comment:</h5>
                    <div class="card-body">
                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <textarea asp-for="@Model.CommentContent" id="Content" class="form-control" rows="4"></textarea>
                                <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
                            </div>
                            <input type="hidden" id="AuthorId" name="AuthorId" value="@this.User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                            <input type="hidden" id="TopicId" name="TopicId" value="@Model.Id" />
                            <div class="form-group">
                                <input asp-controller="Comments" asp-action="Create" type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <h5>You have to be logged in to post a comment!</h5>
                    <p>
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Login</a> &nbsp; | &nbsp;
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Register</a>
                    </p>
                </div>
            }

            @foreach (var comment in Model.Comments)
            {
                <div class="media mb-4">
                    @if (comment.Author.ProfilePictureUrl == null)
                    {
                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="https://res.cloudinary.com/doyjshrjs/image/upload/v1584395277/Profile-PNG-Icon-715x715_smb7cf.png" alt="">
                    }
                    else
                    {
                        <img class="d-flex mr-3 rounded-circle comment-picture-no-resize" src="@comment.Author.ProfilePictureUrl" alt="">
                    }
                    <div class="media-body">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mt-0"><a asp-controller="Users" asp-action="Profile" asp-route-id="@comment.Author.Id">@comment.Author.UserName</a></h5>
                            <small>@comment.CreatedOn.ToString()</small>
                        </div>
                        <p class="mb-1">@comment.Content</p>

                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <a href="#" class="btn btn-primary btn-sm">Reply</a>
                        }

                        @if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == comment.Author.Id
                     || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                        {
                            <a href="#" class="btn btn-primary btn-sm">Edit</a>
                            <a class="btn btn-danger btn-sm" asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id" asp-route-authorId="@comment.Author.Id" asp-route-topicId="@Model.Id">Delete</a>
                        }
                        else if (this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.Author.Id)
                        {
                            <a class="btn btn-danger btn-sm" asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id" asp-route-authorId="@comment.Author.Id" asp-route-topicId="@Model.Id">Delete</a>
                        }

                    </div>
                </div>
            }

            <!-- Comment with nested comments -->
            <div class="media mb-4">
                <img class="d-flex mr-3 rounded-circle" src="http://placehold.it/50x50" alt="">
                <div class="media-body">
                    <h5 class="mt-0">Commenter Name</h5>
                    Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.

                    <div class="media mt-4">
                        <img class="d-flex mr-3 rounded-circle" src="http://placehold.it/50x50" alt="">
                        <div class="media-body">
                            <h5 class="mt-0">Commenter Name</h5>
                            Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

            <!--Profile Info Widget-->
            @await Html.PartialAsync("_ProfileInfoSideWidget", Model.Author)

            <!-- Side Widget -->
            @await Html.PartialAsync("_PromptingWidgetPartial")

            <!-- Categories Widget -->
            @await Html.PartialAsync("_PopularCategoriesPartial", Model.Categories)


        </div>

    </div>
    <!-- /.row -->

</div>


<!-- Topic Delete Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this Topic?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <a class="btn btn-danger" asp-controller="Topics" asp-action="Delete" asp-route-id="@Model.Id" asp-route-authorId="@Model.Author.Id">Delete</a>
            </div>
        </div>
    </div>
</div>

<!-- /.container -->
<!-- Bootstrap core JavaScript -->
<script src="vendor/jquery/jquery.min.js"></script>
<script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<!-- Scripts for Topic deletion modal -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

<script src="bootstrap/js/bootstrap.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#delete").click(function () {
            $("#confirmDeleteModal").modal('show');
        });
    });

    $("#btnHideModal").click(function () {
        $("#confirmDeleteModal").modal('hide');
    });
</script>

<!-- Ajax request for like function -->
<script>
    $(document).ready(function () {
        $("#like").click(function () {
            $.ajax('/Topics/LikeTopic', {
                type: 'POST',  // http method
                data: { topicId: '@Model.Id' },  // data to submit
                success: function () {
                    $("#like").hide(function () { });
                    document.getElementById('likeClicked').style.visibility = 'visible';
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    $('p').append('Error' + errorMessage);
                }
            });
        });
    });
</script>
<!-- Ajax request for like function -->
<!-- Ajax request for dislike function -->
<script>
    $(document).ready(function () {
        $("#dislike").click(function () {
            $.ajax('/Topics/DislikeTopic', {
                type: 'POST',  // http method
                data: { topicId: '@Model.Id' },  // data to submit
                success: function () {
                    $("#dislike").hide(function () {
                        $("#dislikeClicked").show()
                    });
                },
                error: function (jqXhr, textStatus, errorMessage) {
                    $('p').append('Error' + errorMessage);
                }
            });
        });
    });
</script>
<!-- Ajax request for dislike function -->
